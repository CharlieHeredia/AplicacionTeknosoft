<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEACACoCAAAFgAAACgAAAAgAAAAQAAAAAEACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAeVoAAHtcBABLU1YAVlJRAF1ZWABhXlwAbWlnAHh0cgCJbRsAk3oqAJZ/OQCDf30AmoA2AKGF
        PgCkiUUAo41HAKiNRwCni0kAqY1NAKuQUQCtk1EArJJUAK+VWQCwmlYAsZdcALGaWQCznVoAs5lfALWf
        XwCym2MAtZxkALeeaAC3oGQAt6FtALmhbAC7pHAAu6d3AL2mdQC7qXIAv6xzALyreQC+rX0AwKp5AMGs
        fQDCsHgAxLN+ABtQvQATTcIAHFLCABlVzwAWVNAAHFjQACdbywAmW80AKFvKAC9v4gA6e+oAdYWfAHeI
        qgBjgbsAYYXZAHKU2wBJjPQAUpP5AFWW+wCPi4gAkY6MAJiVkwCZlZQAnJeWAJqYlgChnpwAq6elALOv
        rQC0sK8Avbu5AMGugQDEr4IAwbCCAMKyhQDGsYUAw7SGAMS0iADGtYwAyLSKAMq2jQDHuI4AyLqOAMi5
        kQDMuZIAzb2VAMu7nQDQvpoA0b+dAMzAmADSwZ8A0MSeANXEpADXx6gA3M6yANzb2ADl3cQA5+HKAO7p
        1wDj4t8A7urYAObl4gDq6eYA7OrnAOzq6AD28+kA9/XrAPLx7gDo7vYA9fTxAPv58wD8+/gA/v36AMLw
        AADR/xEA2P8xAN7/UQDj/3EA6f+RAO//sQD2/9EA////AAAAAAAvJgAAUEEAAHBbAACQdAAAsI4AAM+p
        AADwwwAA/9IRAP/YMQD/3VEA/+RxAP/qkQD/8LEA//bRAP///wAAAAAALxQAAFAiAABwMAAAkD4AALBN
        AADPWwAA8GkAAP95EQD/ijEA/51RAP+vcQD/wZEA/9KxAP/l0QD///8AAAAAAC8DAABQBAAAcAYAAJAJ
        AACwCgAAzwwAAPAOAAD/IBIA/z4xAP9cUQD/enEA/5eRAP+2sQD/1NEA////AAAAAAAvAA4AUAAXAHAA
        IQCQACsAsAA2AM8AQADwAEkA/xFaAP8xcAD/UYYA/3GcAP+RsgD/scgA/9HfAP///wAAAAAALwAgAFAA
        NgBwAEwAkABiALAAeADPAI4A8ACkAP8RswD/Mb4A/1HHAP9x0QD/kdwA/7HlAP/R8AD///8AAAAAACwA
        LwBLAFAAaQBwAIcAkAClALAAxADPAOEA8ADwEf8A8jH/APRR/wD2cf8A95H/APmx/wD70f8A////AAAA
        AAAbAC8ALQBQAD8AcABSAJAAYwCwAHYAzwCIAPAAmRH/AKYx/wC0Uf8AwnH/AM+R/wDcsf8A69H/AP//
        /wAAAAAACAAvAA4AUAAVAHAAGwCQACEAsAAmAM8ALADwAD4R/wBYMf8AcVH/AIxx/wCmkf8Av7H/ANrR
        /wD///8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKEBAQEBAQEBAQ
        EBAQEBAQEBAQEBAQEAoAAAAAAAAAAF92c3FxcXFxcXV2dnZ2dnZ2dnZ2dnZ2XwAAAAAAAAAAX3ZLRkZG
        RkZGbnZ2dnZ2dnZ2dnZ2dnZfAAAAAAAAAABfdkpFRUVFRUVtdnZ2dnZ2dnZ2dnZ2dl8AAAAAAAAAAF92
        SUJCQkJCQmx2YRgbHRpwYSgtLid0XwAAAAAAAAAAX3ZIDAwMDAwMa3ZQIyYsIWhZYGNkVG9fAAAAAAAA
        AABfdkUICAgICAhrdk8cICQaaFdaXWJNb18AAAAAAAAAAF92QwcHBwcHB2l2KhYZHxVoVFFWWyVvXwAA
        AAAAAAAAX3ZEBgYGBgYGbXYqEhQXEWhTK05VIm9fAAAAAAAAAABfdmUFBAQEBEN2dikODxMOalAjJiwe
        b18AAAAAAAAAAF92dmlIR0dMdXZ2Z1BSU1h1ZldZWVt2XwAAAAAAAAAAX3Z2dnZ2dnZ2dnZ2dnZ2dnZ2
        dnZ2dnZfAAAAAAAAMzA8cnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2cjwwMwAAAD0/QTkyPnJ2dnZ2dnZ2dnZ2
        dnZ2dnZ2cj4yOUE/PQAAADY4QEE5Mj5ydnZ2dnZ2dnZ2dnZ2cj4yOUFAODYAAAAAAAA2OEBBOTI+cnZ2
        dnZ2dnZ2cj4yOUFAODUAAAAAAAAAAAAANjhAQTkyPnJ2dnZ2cj4yOUFAODEDAAAAAAAAAAAAAAAAADY4
        QEE5Mj5ycj4yOUFAODE7XAkAAAAAAAAAAAAAAAAAAAA2OEBBOTQ0OUFAOC87XF5eCQAAAAAAAAAAAAAA
        AAAAAAAANjhAQUFAODc6C15eXl4JAAAAAAAAAAAAAAAAAAAAAAAAADY4ODYAAAANXl5eXgkAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAEBAQEBAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAP//////////////////////////8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AA
        AA/wAAAP8AAAD/AAAA/wAAAPwAAAA4AAAAHAAAAD8AAAD/wAAB//AAAf/8AAH//wAB///Dgf///4H///
        ////////////////////////
</value>
  </data>
</root>